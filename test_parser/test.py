# This file is automatically generated by EBNFParser.
from Ruikowa.ObjectRegex.Tokenizer import unique_literal_cache_pool, regex_matcher, char_matcher, str_matcher, Tokenizer
from Ruikowa.ObjectRegex.Node import AstParser, Ref, SeqParser, LiteralValueParser, LiteralNameParser, Undef
namespace = globals()
recur_searcher = set()
token_table = ((unique_literal_cache_pool["a"], char_matcher(('a'))),
               (unique_literal_cache_pool["auto_const"], char_matcher(('&'))))

class UNameEnum:
# names
    auto_const = unique_literal_cache_pool['auto_const']
    a = unique_literal_cache_pool['a']
    b = unique_literal_cache_pool['b']
# values
    a_a = unique_literal_cache_pool['a']
        
token_func = lambda _: Tokenizer.from_raw_strings(_, token_table, ({}, {}))
a = LiteralNameParser('a')
b = AstParser([SeqParser(['&'], at_least=0,at_most=1), Ref('a')],
              name="b",
              to_ignore=({}, {}))
b.compile(namespace, recur_searcher)